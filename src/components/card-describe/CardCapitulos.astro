---
import {Icon} from 'astro-icon/components';

interface CardCapitulosProps {
    number: number;
    name: string;
    shortDescription: string;
    largeDescription: string;
    color: string;
}

const { number, name, shortDescription, largeDescription, color } : CardCapitulosProps = Astro.props;
---

<article class="w-4/5 my-4 col-span-2
  p-8 rounded-xl shadow-lg shadow-black/50 chapter ease-in-out duration-500">
    <section class="flex gap-4">
        <section class="w-1/5">
            <h5 class=`text-7xl ${color} color-number`>{`0${number}`}</h5>
        </section>
        <section class="w-3/5">
            <h3 class="uppercase abbr-chapter"></h3>
            <h2 class="capitalize font-bold text-2xl font-title chapter-name">
                {name}
            </h2>
            <p class="mt-4 text-lg ">
                {shortDescription}
            </p>
        </section>
        <section class="w-1/5 flex justify-end items-end">
            <button class="flex items-center gap-2 btn-details">
                <span>Detalles</span>
                <div class=" p-2 rounded-full bg-gray-100 container-icon ease-in-out duration-400">
                    <Icon name="ui/plus" class="text-black icon ease-linear duration-300" size={24}/>
                </div>
            </button>
        </section>
    </section>
    <section class="flex gap-4 w-3/5 mx-auto mt-8 content-hidden hidden">
        <div>
            _____
        </div>
        <section>
            <h2 class=" capitalize text-2xl mb-4">{name}</h2>
            <p>
                {largeDescription}
            </p>
        </section>
    </section>
</article>


<script>
    function getInitials(phrase) {
        // Dividir la frase en palabras
        const words = phrase.split(' ');

        // Obtener la primera letra de cada palabra y unirlas
        const initials = words.map(word => word.charAt(0)).join('');

        return initials;
    }

    // Seleccionar todos los elementos con clase .chapter
    const chapters = document.querySelectorAll('.chapter');

    chapters.forEach((chapter, index) => {
        // Seleccionar los elementos .chapter-name y .abbr-chapter dentro de cada .chapter
        const chapterName = chapter.querySelector('.chapter-name');
        const abbrChapter = chapter.querySelector('.abbr-chapter');

        // Obtener las iniciales del texto del .chapter-name
        const initials = getInitials(chapterName.textContent);

        // Asignar las iniciales al .abbr-chapter correspondiente
        abbrChapter.textContent = `capÃ­tulo ${initials}`;

        if (index % 2 === 0) {
            chapter.classList.add('justify-self-start');
        } else {
            chapter.classList.add('justify-self-end');
        }

        if (index === 0) {
            chapter.classList.add('shadow-sky-300/90');
            chapter.classList.add('bg-blueCard');
            chapter.classList.add('text-white');
            chapter.querySelector('.color-number').classList.add('!text-white');
            chapter.querySelector('.btn-details .container-icon').classList.add('!bg-white');
            chapter.querySelector('.container-icon .icon').classList.add('rotate-45');
            chapter.querySelector('.content-hidden').classList.remove('hidden');
        }

        chapter.querySelectorAll('.btn-details').forEach(btn => {
            btn.addEventListener('click', () => {

                chapters.forEach(c => {
                    if (c !== chapter) {
                        c.querySelector('.content-hidden').classList.add('hidden');
                        c.classList.remove('shadow-black/50');
                        c.classList.remove('shadow-sky-300/90');
                        c.classList.remove('bg-blueCard');
                        c.classList.remove('text-white');
                        c.querySelector('.color-number').classList.remove('!text-white');
                        c.querySelector('.btn-details .container-icon').classList.remove('!bg-white');
                        c.querySelector('.container-icon .icon').classList.remove('rotate-45');
                    }
                });

                chapter.querySelector('.content-hidden').classList.toggle('hidden');
                chapter.classList.toggle('shadow-black/50');
                chapter.classList.toggle('shadow-sky-300/90');
                chapter.classList.toggle('bg-blueCard');
                chapter.classList.toggle('text-white');
                chapter.querySelector('.color-number').classList.toggle('!text-white');
                chapter.querySelector('.btn-details .container-icon').classList.toggle('!bg-white');
                chapter.querySelector('.container-icon .icon').classList.toggle('rotate-45');
            });
        });
    });


</script>